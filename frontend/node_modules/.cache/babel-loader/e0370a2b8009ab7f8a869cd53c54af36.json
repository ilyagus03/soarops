{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clayf\\\\OneDrive\\\\Documents\\\\GitHub\\\\soarops\\\\frontend\\\\src\\\\Demo.js\";\nimport React, { useState } from \"react\";\n\n// --- Name lists ---\nconst FIRST_NAMES = [\"Alex\", \"Taylor\", \"Jordan\", \"Morgan\", \"Casey\", \"Jamie\", \"Drew\", \"Avery\", \"Riley\", \"Parker\", \"Sydney\", \"Cameron\", \"Reese\", \"Quinn\", \"Skyler\", \"Rowan\", \"Emerson\", \"Harper\", \"Logan\", \"Finley\", \"Sawyer\", \"Dakota\", \"Charlie\", \"Elliot\", \"Jesse\", \"Robin\", \"Sam\", \"Blake\", \"Reagan\", \"Hayden\", \"Jules\"];\nconst LAST_NAMES = [\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Garcia\", \"Miller\", \"Davis\", \"Martinez\", \"Hernandez\", \"Lopez\", \"Gonzalez\", \"Wilson\", \"Anderson\", \"Thomas\", \"Moore\", \"Martin\", \"Lee\", \"Perez\", \"Thompson\", \"White\", \"Harris\", \"Sanchez\", \"Clark\", \"Ramirez\", \"Lewis\", \"Walker\", \"Young\", \"Allen\", \"King\"];\n\n// --- Position Definitions ---\nconst THEATER_POSITIONS = [\"Tower\", \"Grouper\", \"Gate\", \"Assist\", \"Wheelchair Assist\"];\nconst GLOBAL_POSITIONS = [\"Standby Greeter\", \"Lightning Lane 1\", \"Lightning Lane 2\", \"Tour Desk\", \"Lost & Found\", \"Pre-Merge\", \"Merge\"];\nconst THEATERS = [\"A\", \"B\", \"C\"];\nconst THEATER_NAMES = {\n  A: \"A Theater\",\n  B: \"B Theater\",\n  C: \"C Theater\"\n};\n\n// --- Helper Functions ---\nfunction getRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\nfunction getRandomBreakTime() {\n  const hour = 10 + Math.floor(Math.random() * 7);\n  const min = Math.random() < 0.5 ? \"00\" : \"30\";\n  return `${hour}:${min}`;\n}\nfunction randomFullName(existingNames = []) {\n  let name;\n  do {\n    name = `${getRandom(FIRST_NAMES)} ${getRandom(LAST_NAMES)}`;\n  } while (existingNames.includes(name));\n  return name;\n}\nfunction randomCastId(existingIds = []) {\n  let id;\n  do {\n    id = String(100000 + Math.floor(Math.random() * 900000));\n  } while (existingIds.includes(id));\n  return id;\n}\n\n// --- Generate Initial Full Staff List ---\nfunction generateInitialStaff() {\n  let staff = [];\n  let id = 1;\n  let usedNames = [];\n  let usedIds = [];\n  // Fill all theater positions for each theater\n  for (let theater of THEATERS) {\n    for (let pos of THEATER_POSITIONS) {\n      let position = pos === \"Gate\" ? `${theater} Gate` : pos;\n      let name = randomFullName(usedNames);\n      let castId = randomCastId(usedIds);\n      usedNames.push(name);\n      usedIds.push(castId);\n      staff.push({\n        id: id++,\n        castId,\n        name,\n        position,\n        theater,\n        status: \"On Duty\",\n        breakTime: getRandomBreakTime(),\n        efficiency: 85 + Math.floor(Math.random() * 15)\n      });\n    }\n  }\n  // Fill all global positions (one each)\n  for (let pos of GLOBAL_POSITIONS) {\n    let name = randomFullName(usedNames);\n    let castId = randomCastId(usedIds);\n    usedNames.push(name);\n    usedIds.push(castId);\n    staff.push({\n      id: id++,\n      castId,\n      name,\n      position: pos,\n      theater: null,\n      status: \"On Duty\",\n      breakTime: getRandomBreakTime(),\n      efficiency: 85 + Math.floor(Math.random() * 15)\n    });\n  }\n  // Add extra staff (on break)\n  for (let i = 0; i < 6; i++) {\n    let name = randomFullName(usedNames);\n    let castId = randomCastId(usedIds);\n    usedNames.push(name);\n    usedIds.push(castId);\n    staff.push({\n      id: id++,\n      castId,\n      name,\n      position: \"Unassigned\",\n      theater: null,\n      status: \"On Break\",\n      breakTime: getRandomBreakTime(),\n      efficiency: 85 + Math.floor(Math.random() * 15)\n    });\n  }\n  return staff;\n}\n\n// --- Random Assignment Logic ---\nfunction getRandomAssignment(staffList) {\n  // 20% chance for Tower position\n  if (Math.random() < 0.2) {\n    for (let theater of THEATERS) {\n      if (!staffList.some(s => s.position === \"Tower\" && s.theater === theater && s.status === \"On Duty\")) {\n        return {\n          position: \"Tower\",\n          theater\n        };\n      }\n    }\n  }\n  // Try other theater positions\n  const otherTheaterPositions = THEATER_POSITIONS.filter(p => p !== \"Tower\");\n  for (let pos of otherTheaterPositions) {\n    for (let theater of THEATERS) {\n      let position = pos === \"Gate\" ? `${theater} Gate` : pos;\n      if (!staffList.some(s => s.position === position && s.theater === theater && s.status === \"On Duty\")) {\n        return {\n          position,\n          theater\n        };\n      }\n    }\n  }\n  // Try global positions (only one of each)\n  for (let pos of GLOBAL_POSITIONS) {\n    if (!staffList.some(s => s.position === pos && s.status === \"On Duty\")) {\n      return {\n        position: pos,\n        theater: null\n      };\n    }\n  }\n  // If all filled, assign to Assist in random theater\n  return {\n    position: \"Assist\",\n    theater: getRandom(THEATERS)\n  };\n}\nfunction efficiencyColor(eff) {\n  if (eff >= 88) return \"#10b981\";\n  if (eff >= 73) return \"#f59e0b\";\n  return \"#ef4444\";\n}\n\n// --- Wait Time Color/Delta Helper ---\nfunction waitTimeCell(hourlyWaitTimes, idx) {\n  const item = hourlyWaitTimes[idx];\n  const prev = idx > 0 ? hourlyWaitTimes[idx - 1].waitTime : item.waitTime;\n  const delta = item.waitTime - prev;\n  let color = \"#10b981\"; // green\n  if (delta > 2) color = \"#ef4444\"; // red\n  else if (Math.abs(delta) <= 2) color = \"#f59e0b\"; // yellow\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, item.waitTime, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 400,\n      fontSize: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"(\", delta > 0 ? \"+\" : \"\", delta, \")\"));\n}\nfunction SoarOps() {\n  // --- State ---\n  const [showAdminModal, setShowAdminModal] = useState(false);\n  const [adminCode, setAdminCode] = useState(\"\");\n  const [isAdminMode, setIsAdminMode] = useState(false);\n  const [showCastAccess, setShowCastAccess] = useState(false);\n\n  // Cast Access State\n  const [castStatus, setCastStatus] = useState(\"Off Duty\");\n  const [castAssignment, setCastAssignment] = useState(null);\n  const [castIdInput, setCastIdInput] = useState(\"\");\n  const [castSession, setCastSession] = useState(null); // stores the cast member object being controlled\n  const [castError, setCastError] = useState(\"\");\n\n  // Staff List\n  const [staffList, setStaffList] = useState(generateInitialStaff());\n  const [nextStaffId, setNextStaffId] = useState(100);\n\n  // For admin add staff\n  const [newStaffName, setNewStaffName] = useState(\"\");\n  const [newStaffCastId, setNewStaffCastId] = useState(\"\");\n  const [newStaffPosition, setNewStaffPosition] = useState(THEATER_POSITIONS[0]);\n  const [newStaffTheater, setNewStaffTheater] = useState(THEATERS[0]);\n  const [newStaffBreakTime, setNewStaffBreakTime] = useState(getRandomBreakTime());\n\n  // Guest/Wait/Efficiency\n  const [guestCount, setGuestCount] = useState(36542);\n  const [liveWaitTime, setLiveWaitTime] = useState(45);\n  const [hourlyWaitTimes, setHourlyWaitTimes] = useState([{\n    hour: \"8 AM\",\n    waitTime: 30\n  }, {\n    hour: \"9 AM\",\n    waitTime: 35\n  }, {\n    hour: \"10 AM\",\n    waitTime: 50\n  }, {\n    hour: \"11 AM\",\n    waitTime: 65\n  }, {\n    hour: \"12 PM\",\n    waitTime: 70\n  }, {\n    hour: \"1 PM\",\n    waitTime: 55\n  }, {\n    hour: \"2 PM\",\n    waitTime: 45\n  }, {\n    hour: \"3 PM\",\n    waitTime: 40\n  }, {\n    hour: \"4 PM\",\n    waitTime: 35\n  }, {\n    hour: \"5 PM\",\n    waitTime: 40\n  }, {\n    hour: \"6 PM\",\n    waitTime: 30\n  }, {\n    hour: \"7 PM\",\n    waitTime: 25\n  }]);\n  const [hourlyEfficiency, setHourlyEfficiency] = useState([{\n    hour: \"8 AM\",\n    efficiency: 91\n  }, {\n    hour: \"9 AM\",\n    efficiency: 93\n  }, {\n    hour: \"10 AM\",\n    efficiency: 96\n  }, {\n    hour: \"11 AM\",\n    efficiency: 94\n  }, {\n    hour: \"12 PM\",\n    efficiency: 89\n  }, {\n    hour: \"1 PM\",\n    efficiency: 87\n  }, {\n    hour: \"2 PM\",\n    efficiency: 90\n  }, {\n    hour: \"3 PM\",\n    efficiency: 94\n  }, {\n    hour: \"4 PM\",\n    efficiency: 96\n  }, {\n    hour: \"5 PM\",\n    efficiency: 97\n  }, {\n    hour: \"6 PM\",\n    efficiency: 95\n  }, {\n    hour: \"7 PM\",\n    efficiency: 92\n  }]);\n  const [theaterStatus, setTheaterStatus] = useState({\n    A: \"Operational\",\n    B: \"Operational\",\n    C: \"Maintenance\"\n  });\n\n  // --- Leadership/Admin Modal Logic ---\n  const verifyAdminCode = () => {\n    if (adminCode === \"123456789\") {\n      setIsAdminMode(true);\n      setShowAdminModal(false);\n    } else {\n      alert(\"Invalid authorization code. Please try again or contact your supervisor.\");\n    }\n  };\n\n  // --- Cast Access Logic ---\n  function handleCastIdSubmit(e) {\n    e.preventDefault();\n    setCastError(\"\");\n    const found = staffList.find(s => s.castId === castIdInput);\n    if (!found) {\n      setCastSession(null);\n      setCastError(\"Cast ID not found. Please try again.\");\n      setCastStatus(\"Off Duty\");\n      setCastAssignment(null);\n      return;\n    }\n    setCastSession(found);\n    setCastStatus(found.status);\n    setCastAssignment(found.position !== \"Unassigned\" ? {\n      position: found.position,\n      theater: found.theater\n    } : null);\n    setCastError(\"\");\n  }\n  function handleCastClockIn() {\n    if (!castSession) return;\n    setCastStatus(\"On Duty\");\n    setStaffList(list => list.map(s => s.castId === castSession.castId ? {\n      ...s,\n      status: \"On Duty\"\n    } : s));\n  }\n  function handleCastGetAssignment() {\n    if (!castSession) return;\n    const assignment = getRandomAssignment(staffList);\n    setCastAssignment(assignment);\n    setStaffList(list => list.map(s => s.castId === castSession.castId ? {\n      ...s,\n      position: assignment.position,\n      theater: assignment.theater,\n      status: \"On Duty\"\n    } : s));\n  }\n  function handleCastLunch() {\n    if (!castSession) return;\n    setCastStatus(\"On Break\");\n    setStaffList(list => list.map(s => s.castId === castSession.castId && s.status === \"On Duty\" ? {\n      ...s,\n      status: \"On Break\"\n    } : s));\n  }\n  function handleCastClockOut() {\n    if (!castSession) return;\n    setCastStatus(\"Off Duty\");\n    setCastAssignment(null);\n    setStaffList(list => list.map(s => s.castId === castSession.castId ? {\n      ...s,\n      status: \"Off Duty\"\n    } : s));\n  }\n\n  // Bump Out logic: swap break status with another cast member\n  function handleCastBumpOut(breakStaffId) {\n    if (!castSession) return;\n    setStaffList(list => list.map(s => {\n      if (s.id === breakStaffId) {\n        return {\n          ...s,\n          status: \"On Duty\"\n        };\n      } else if (s.castId === castSession.castId) {\n        return {\n          ...s,\n          status: \"On Break\"\n        };\n      } else {\n        return s;\n      }\n    }));\n    setCastStatus(\"On Break\");\n  }\n\n  // --- Admin Features ---\n  const handleAddStaff = () => {\n    // Use a random name if none entered\n    const name = newStaffName.trim() || randomFullName(staffList.map(s => s.name));\n    const castId = newStaffCastId.trim() || randomCastId(staffList.map(s => s.castId));\n    setStaffList([...staffList, {\n      id: nextStaffId,\n      castId,\n      name,\n      position: newStaffPosition === \"Gate\" ? `${newStaffTheater} Gate` : newStaffPosition,\n      theater: THEATER_POSITIONS.includes(newStaffPosition) ? newStaffTheater : null,\n      status: \"On Duty\",\n      breakTime: newStaffBreakTime,\n      efficiency: 85 + Math.floor(Math.random() * 15)\n    }]);\n    setNextStaffId(id => id + 1);\n    setNewStaffName(\"\");\n    setNewStaffCastId(\"\");\n    alert(\"Staff member added successfully!\");\n  };\n\n  // Leadership can move cast to any position/theater\n  const handleMoveStaff = (id, newPosition, newTheater) => {\n    setStaffList(list => list.map(s => s.id === id ? {\n      ...s,\n      position: newPosition === \"Gate\" ? `${newTheater} Gate` : newPosition,\n      theater: THEATER_POSITIONS.includes(newPosition) ? newTheater : null\n    } : s));\n  };\n  const handleCastIdChange = (id, newCastId) => {\n    setStaffList(list => list.map(s => s.id === id ? {\n      ...s,\n      castId: newCastId\n    } : s));\n  };\n  const handleBreakTimeChange = (id, newBreakTime) => {\n    setStaffList(staffList.map(staff => staff.id === id ? {\n      ...staff,\n      breakTime: newBreakTime\n    } : staff));\n  };\n\n  // --- Guest/Wait Time Controls ---\n  const handleGuestCountChange = amount => {\n    setGuestCount(Math.max(0, guestCount + amount));\n  };\n  const handleCustomGuestCountChange = newCount => {\n    const count = parseInt(newCount);\n    if (!isNaN(count) && count >= 0) {\n      setGuestCount(count);\n    }\n  };\n  const handleLiveWaitTimeChange = amount => {\n    setLiveWaitTime(Math.max(0, liveWaitTime + amount));\n    setTimeout(updateHourlyWaitTimes, 10);\n  };\n  const handleCustomWaitTimeChange = newTime => {\n    const time = parseInt(newTime);\n    if (!isNaN(time) && time >= 0) {\n      setLiveWaitTime(time);\n      setTimeout(updateHourlyWaitTimes, 10);\n    }\n  };\n  const updateHourlyWaitTimes = () => {\n    const currentHour = new Date().getHours();\n    let hourString = currentHour >= 12 ? `${currentHour > 12 ? currentHour - 12 : currentHour} PM` : `${currentHour === 0 ? 12 : currentHour} AM`;\n    setHourlyWaitTimes(hourlyWaitTimes.map(item => item.hour === hourString ? {\n      ...item,\n      waitTime: liveWaitTime\n    } : item));\n  };\n\n  // --- Calculations ---\n  const averageWaitTime = Math.round(hourlyWaitTimes.reduce((sum, item) => sum + item.waitTime, 0) / hourlyWaitTimes.length);\n  const averageEfficiency = Math.round(hourlyEfficiency.reduce((sum, item) => sum + item.efficiency, 0) / hourlyEfficiency.length);\n\n  // --- Real-time Staffing Counts ---\n  function getStaffCount(theater, position) {\n    if (position === \"Gate\") position = `${theater} Gate`;\n    return staffList.filter(s => s.status === \"On Duty\" && s.position === position && (s.theater === theater || !s.theater)).length;\n  }\n\n  // --- Live Wait Time Delta Logic ---\n  // Find the most recent hour in hourlyWaitTimes that matches liveWaitTime, or previous hour if not found\n  let liveIdx = hourlyWaitTimes.findIndex(item => item.waitTime === liveWaitTime);\n  if (liveIdx === -1) liveIdx = hourlyWaitTimes.length - 1;\n  const prevWaitTime = liveIdx > 0 ? hourlyWaitTimes[liveIdx - 1].waitTime : hourlyWaitTimes[0].waitTime;\n  const liveDelta = liveWaitTime - prevWaitTime;\n  let liveColor = \"#10b981\"; // green\n  if (liveDelta > 2) liveColor = \"#ef4444\";else if (Math.abs(liveDelta) <= 2) liveColor = \"#f59e0b\";\n\n  // --- UI Styles ---\n  const buttonStyle = {\n    padding: \"8px 14px\",\n    backgroundColor: \"#0066b2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    fontWeight: \"600\",\n    fontSize: \"14px\",\n    margin: \"0 8px 8px 0\"\n  };\n  const secondaryButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#10b981\"\n  };\n  const navButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#f1f5fb\",\n    color: \"#0066b2\",\n    border: \"1px solid #e0e8f5\"\n  };\n  const statusThStyle = {\n    padding: \"8px\",\n    border: \"1px solid #e0e8f5\",\n    backgroundColor: \"#f1f5fb\",\n    fontWeight: \"600\",\n    color: \"#0066b2\",\n    fontSize: \"13px\"\n  };\n  const statusTdStyle = {\n    padding: \"8px\",\n    border: \"1px solid #e0e8f5\",\n    textAlign: \"center\",\n    fontSize: \"13px\"\n  };\n\n  // --- Main Render ---\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"32px\",\n      backgroundColor: \"#f5f9ff\",\n      fontFamily: '\"Avenir Next\", \"Segoe UI\", Arial, sans-serif',\n      borderRadius: \"16px\",\n      boxShadow: \"0 4px 20px rgba(0,0,0,0.08)\",\n      maxWidth: \"1100px\",\n      margin: \"40px auto\",\n      border: \"1px solid #e0e8f5\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 5\n    }\n  }, isAdminMode && !showCastAccess && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '30px',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 2,\n      minWidth: '340px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '10px',\n      padding: '24px',\n      marginBottom: '20px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\n      border: '1px solid #eef2f8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: '#0066b2',\n      fontSize: '18px',\n      margin: '0 0 10px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 17\n    }\n  }, \"Live Wait Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 12,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '32px',\n      fontWeight: 'bold',\n      color: liveColor,\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 19\n    }\n  }, liveWaitTime, \" min\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '32px',\n      fontWeight: 'bold',\n      color: liveColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 19\n    }\n  }, liveDelta > 0 ? \"+\" : \"\", liveDelta)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: \"wrap\",\n      gap: '8px',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleLiveWaitTimeChange(1),\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 19\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleLiveWaitTimeChange(-1),\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 19\n    }\n  }, \"-1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleLiveWaitTimeChange(5),\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 19\n    }\n  }, \"+5\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleLiveWaitTimeChange(-5),\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 19\n    }\n  }, \"-5\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    value: liveWaitTime,\n    onChange: e => handleCustomWaitTimeChange(e.target.value),\n    style: {\n      width: '100%',\n      padding: '8px',\n      borderRadius: '5px',\n      border: '1px solid #ddd',\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '10px',\n      padding: '24px',\n      marginBottom: '20px',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\n      border: '1px solid #eef2f8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: '#0066b2',\n      fontSize: '18px',\n      margin: '0 0 10px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }, \"Hourly Wait Times\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowX: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      minWidth: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: statusThStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 25\n    }\n  }, \"Hour\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: statusThStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 25\n    }\n  }, \"Wait Time (min)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 21\n    }\n  }, hourlyWaitTimes.map((item, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: statusTdStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 27\n    }\n  }, item.hour), /*#__PURE__*/React.createElement(\"td\", {\n    style: statusTdStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 27\n    }\n  }, waitTimeCell(hourlyWaitTimes, idx))))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      color: '#637385',\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 19\n    }\n  }, \"Average Wait Time:\"), \" \", averageWaitTime, \" min\"))))));\n}\nexport default SoarOps;","map":{"version":3,"names":["React","useState","FIRST_NAMES","LAST_NAMES","THEATER_POSITIONS","GLOBAL_POSITIONS","THEATERS","THEATER_NAMES","A","B","C","getRandom","arr","Math","floor","random","length","getRandomBreakTime","hour","min","randomFullName","existingNames","name","includes","randomCastId","existingIds","id","String","generateInitialStaff","staff","usedNames","usedIds","theater","pos","position","castId","push","status","breakTime","efficiency","i","getRandomAssignment","staffList","some","s","otherTheaterPositions","filter","p","efficiencyColor","eff","waitTimeCell","hourlyWaitTimes","idx","item","prev","waitTime","delta","color","abs","createElement","style","fontWeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","SoarOps","showAdminModal","setShowAdminModal","adminCode","setAdminCode","isAdminMode","setIsAdminMode","showCastAccess","setShowCastAccess","castStatus","setCastStatus","castAssignment","setCastAssignment","castIdInput","setCastIdInput","castSession","setCastSession","castError","setCastError","setStaffList","nextStaffId","setNextStaffId","newStaffName","setNewStaffName","newStaffCastId","setNewStaffCastId","newStaffPosition","setNewStaffPosition","newStaffTheater","setNewStaffTheater","newStaffBreakTime","setNewStaffBreakTime","guestCount","setGuestCount","liveWaitTime","setLiveWaitTime","setHourlyWaitTimes","hourlyEfficiency","setHourlyEfficiency","theaterStatus","setTheaterStatus","verifyAdminCode","alert","handleCastIdSubmit","e","preventDefault","found","find","handleCastClockIn","list","map","handleCastGetAssignment","assignment","handleCastLunch","handleCastClockOut","handleCastBumpOut","breakStaffId","handleAddStaff","trim","handleMoveStaff","newPosition","newTheater","handleCastIdChange","newCastId","handleBreakTimeChange","newBreakTime","handleGuestCountChange","amount","max","handleCustomGuestCountChange","newCount","count","parseInt","isNaN","handleLiveWaitTimeChange","setTimeout","updateHourlyWaitTimes","handleCustomWaitTimeChange","newTime","time","currentHour","Date","getHours","hourString","averageWaitTime","round","reduce","sum","averageEfficiency","getStaffCount","liveIdx","findIndex","prevWaitTime","liveDelta","liveColor","buttonStyle","padding","backgroundColor","border","borderRadius","cursor","margin","secondaryButtonStyle","navButtonStyle","statusThStyle","statusTdStyle","textAlign","fontFamily","boxShadow","maxWidth","display","gap","flexWrap","flex","minWidth","marginBottom","alignItems","marginRight","onClick","type","value","onChange","target","width","overflowX","borderCollapse","key","marginTop"],"sources":["C:/Users/clayf/OneDrive/Documents/GitHub/soarops/frontend/src/Demo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// --- Name lists ---\r\nconst FIRST_NAMES = [\r\n  \"Alex\", \"Taylor\", \"Jordan\", \"Morgan\", \"Casey\", \"Jamie\", \"Drew\", \"Avery\", \"Riley\", \"Parker\",\r\n  \"Sydney\", \"Cameron\", \"Reese\", \"Quinn\", \"Skyler\", \"Rowan\", \"Emerson\", \"Harper\", \"Logan\", \"Finley\",\r\n  \"Sawyer\", \"Dakota\", \"Charlie\", \"Elliot\", \"Jesse\", \"Robin\", \"Sam\", \"Blake\", \"Reagan\", \"Hayden\", \"Jules\"\r\n];\r\nconst LAST_NAMES = [\r\n  \"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Garcia\", \"Miller\", \"Davis\", \"Martinez\", \"Hernandez\",\r\n  \"Lopez\", \"Gonzalez\", \"Wilson\", \"Anderson\", \"Thomas\", \"Moore\", \"Martin\", \"Lee\", \"Perez\", \"Thompson\",\r\n  \"White\", \"Harris\", \"Sanchez\", \"Clark\", \"Ramirez\", \"Lewis\", \"Walker\", \"Young\", \"Allen\", \"King\"\r\n];\r\n\r\n// --- Position Definitions ---\r\nconst THEATER_POSITIONS = [\"Tower\", \"Grouper\", \"Gate\", \"Assist\", \"Wheelchair Assist\"];\r\nconst GLOBAL_POSITIONS = [\r\n  \"Standby Greeter\",\r\n  \"Lightning Lane 1\",\r\n  \"Lightning Lane 2\",\r\n  \"Tour Desk\",\r\n  \"Lost & Found\",\r\n  \"Pre-Merge\",\r\n  \"Merge\"\r\n];\r\nconst THEATERS = [\"A\", \"B\", \"C\"];\r\nconst THEATER_NAMES = { A: \"A Theater\", B: \"B Theater\", C: \"C Theater\" };\r\n\r\n// --- Helper Functions ---\r\nfunction getRandom(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nfunction getRandomBreakTime() {\r\n  const hour = 10 + Math.floor(Math.random() * 7);\r\n  const min = Math.random() < 0.5 ? \"00\" : \"30\";\r\n  return `${hour}:${min}`;\r\n}\r\nfunction randomFullName(existingNames = []) {\r\n  let name;\r\n  do {\r\n    name = `${getRandom(FIRST_NAMES)} ${getRandom(LAST_NAMES)}`;\r\n  } while (existingNames.includes(name));\r\n  return name;\r\n}\r\nfunction randomCastId(existingIds = []) {\r\n  let id;\r\n  do {\r\n    id = String(100000 + Math.floor(Math.random() * 900000));\r\n  } while (existingIds.includes(id));\r\n  return id;\r\n}\r\n\r\n// --- Generate Initial Full Staff List ---\r\nfunction generateInitialStaff() {\r\n  let staff = [];\r\n  let id = 1;\r\n  let usedNames = [];\r\n  let usedIds = [];\r\n  // Fill all theater positions for each theater\r\n  for (let theater of THEATERS) {\r\n    for (let pos of THEATER_POSITIONS) {\r\n      let position = pos === \"Gate\" ? `${theater} Gate` : pos;\r\n      let name = randomFullName(usedNames);\r\n      let castId = randomCastId(usedIds);\r\n      usedNames.push(name);\r\n      usedIds.push(castId);\r\n      staff.push({\r\n        id: id++,\r\n        castId,\r\n        name,\r\n        position,\r\n        theater,\r\n        status: \"On Duty\",\r\n        breakTime: getRandomBreakTime(),\r\n        efficiency: 85 + Math.floor(Math.random() * 15)\r\n      });\r\n    }\r\n  }\r\n  // Fill all global positions (one each)\r\n  for (let pos of GLOBAL_POSITIONS) {\r\n    let name = randomFullName(usedNames);\r\n    let castId = randomCastId(usedIds);\r\n    usedNames.push(name);\r\n    usedIds.push(castId);\r\n    staff.push({\r\n      id: id++,\r\n      castId,\r\n      name,\r\n      position: pos,\r\n      theater: null,\r\n      status: \"On Duty\",\r\n      breakTime: getRandomBreakTime(),\r\n      efficiency: 85 + Math.floor(Math.random() * 15)\r\n    });\r\n  }\r\n  // Add extra staff (on break)\r\n  for (let i = 0; i < 6; i++) {\r\n    let name = randomFullName(usedNames);\r\n    let castId = randomCastId(usedIds);\r\n    usedNames.push(name);\r\n    usedIds.push(castId);\r\n    staff.push({\r\n      id: id++,\r\n      castId,\r\n      name,\r\n      position: \"Unassigned\",\r\n      theater: null,\r\n      status: \"On Break\",\r\n      breakTime: getRandomBreakTime(),\r\n      efficiency: 85 + Math.floor(Math.random() * 15)\r\n    });\r\n  }\r\n  return staff;\r\n}\r\n\r\n// --- Random Assignment Logic ---\r\nfunction getRandomAssignment(staffList) {\r\n  // 20% chance for Tower position\r\n  if (Math.random() < 0.2) {\r\n    for (let theater of THEATERS) {\r\n      if (!staffList.some(s => s.position === \"Tower\" && s.theater === theater && s.status === \"On Duty\")) {\r\n        return { position: \"Tower\", theater };\r\n      }\r\n    }\r\n  }\r\n  // Try other theater positions\r\n  const otherTheaterPositions = THEATER_POSITIONS.filter(p => p !== \"Tower\");\r\n  for (let pos of otherTheaterPositions) {\r\n    for (let theater of THEATERS) {\r\n      let position = pos === \"Gate\" ? `${theater} Gate` : pos;\r\n      if (!staffList.some(s => s.position === position && s.theater === theater && s.status === \"On Duty\")) {\r\n        return { position, theater };\r\n      }\r\n    }\r\n  }\r\n  // Try global positions (only one of each)\r\n  for (let pos of GLOBAL_POSITIONS) {\r\n    if (!staffList.some(s => s.position === pos && s.status === \"On Duty\")) {\r\n      return { position: pos, theater: null };\r\n    }\r\n  }\r\n  // If all filled, assign to Assist in random theater\r\n  return { position: \"Assist\", theater: getRandom(THEATERS) };\r\n}\r\n\r\nfunction efficiencyColor(eff) {\r\n  if (eff >= 88) return \"#10b981\";\r\n  if (eff >= 73) return \"#f59e0b\";\r\n  return \"#ef4444\";\r\n}\r\n\r\n// --- Wait Time Color/Delta Helper ---\r\nfunction waitTimeCell(hourlyWaitTimes, idx) {\r\n  const item = hourlyWaitTimes[idx];\r\n  const prev = idx > 0 ? hourlyWaitTimes[idx - 1].waitTime : item.waitTime;\r\n  const delta = item.waitTime - prev;\r\n  let color = \"#10b981\"; // green\r\n  if (delta > 2) color = \"#ef4444\"; // red\r\n  else if (Math.abs(delta) <= 2) color = \"#f59e0b\"; // yellow\r\n  return (\r\n    <span style={{ color, fontWeight: \"bold\" }}>\r\n      {item.waitTime}{\" \"}\r\n      <span style={{ fontWeight: 400, fontSize: 13 }}>\r\n        ({delta > 0 ? \"+\" : \"\"}{delta})\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction SoarOps() {\r\n  // --- State ---\r\n  const [showAdminModal, setShowAdminModal] = useState(false);\r\n  const [adminCode, setAdminCode] = useState(\"\");\r\n  const [isAdminMode, setIsAdminMode] = useState(false);\r\n  const [showCastAccess, setShowCastAccess] = useState(false);\r\n\r\n  // Cast Access State\r\n  const [castStatus, setCastStatus] = useState(\"Off Duty\");\r\n  const [castAssignment, setCastAssignment] = useState(null);\r\n  const [castIdInput, setCastIdInput] = useState(\"\");\r\n  const [castSession, setCastSession] = useState(null); // stores the cast member object being controlled\r\n  const [castError, setCastError] = useState(\"\");\r\n\r\n  // Staff List\r\n  const [staffList, setStaffList] = useState(generateInitialStaff());\r\n  const [nextStaffId, setNextStaffId] = useState(100);\r\n\r\n  // For admin add staff\r\n  const [newStaffName, setNewStaffName] = useState(\"\");\r\n  const [newStaffCastId, setNewStaffCastId] = useState(\"\");\r\n  const [newStaffPosition, setNewStaffPosition] = useState(THEATER_POSITIONS[0]);\r\n  const [newStaffTheater, setNewStaffTheater] = useState(THEATERS[0]);\r\n  const [newStaffBreakTime, setNewStaffBreakTime] = useState(getRandomBreakTime());\r\n\r\n  // Guest/Wait/Efficiency\r\n  const [guestCount, setGuestCount] = useState(36542);\r\n  const [liveWaitTime, setLiveWaitTime] = useState(45);\r\n  const [hourlyWaitTimes, setHourlyWaitTimes] = useState([\r\n    { hour: \"8 AM\", waitTime: 30 },\r\n    { hour: \"9 AM\", waitTime: 35 },\r\n    { hour: \"10 AM\", waitTime: 50 },\r\n    { hour: \"11 AM\", waitTime: 65 },\r\n    { hour: \"12 PM\", waitTime: 70 },\r\n    { hour: \"1 PM\", waitTime: 55 },\r\n    { hour: \"2 PM\", waitTime: 45 },\r\n    { hour: \"3 PM\", waitTime: 40 },\r\n    { hour: \"4 PM\", waitTime: 35 },\r\n    { hour: \"5 PM\", waitTime: 40 },\r\n    { hour: \"6 PM\", waitTime: 30 },\r\n    { hour: \"7 PM\", waitTime: 25 }\r\n  ]);\r\n  const [hourlyEfficiency, setHourlyEfficiency] = useState([\r\n    { hour: \"8 AM\", efficiency: 91 },\r\n    { hour: \"9 AM\", efficiency: 93 },\r\n    { hour: \"10 AM\", efficiency: 96 },\r\n    { hour: \"11 AM\", efficiency: 94 },\r\n    { hour: \"12 PM\", efficiency: 89 },\r\n    { hour: \"1 PM\", efficiency: 87 },\r\n    { hour: \"2 PM\", efficiency: 90 },\r\n    { hour: \"3 PM\", efficiency: 94 },\r\n    { hour: \"4 PM\", efficiency: 96 },\r\n    { hour: \"5 PM\", efficiency: 97 },\r\n    { hour: \"6 PM\", efficiency: 95 },\r\n    { hour: \"7 PM\", efficiency: 92 }\r\n  ]);\r\n  const [theaterStatus, setTheaterStatus] = useState({\r\n    A: \"Operational\",\r\n    B: \"Operational\",\r\n    C: \"Maintenance\"\r\n  });\r\n\r\n  // --- Leadership/Admin Modal Logic ---\r\n  const verifyAdminCode = () => {\r\n    if (adminCode === \"123456789\") {\r\n      setIsAdminMode(true);\r\n      setShowAdminModal(false);\r\n    } else {\r\n      alert(\"Invalid authorization code. Please try again or contact your supervisor.\");\r\n    }\r\n  };\r\n\r\n  // --- Cast Access Logic ---\r\n  function handleCastIdSubmit(e) {\r\n    e.preventDefault();\r\n    setCastError(\"\");\r\n    const found = staffList.find(s => s.castId === castIdInput);\r\n    if (!found) {\r\n      setCastSession(null);\r\n      setCastError(\"Cast ID not found. Please try again.\");\r\n      setCastStatus(\"Off Duty\");\r\n      setCastAssignment(null);\r\n      return;\r\n    }\r\n    setCastSession(found);\r\n    setCastStatus(found.status);\r\n    setCastAssignment(found.position !== \"Unassigned\" ? { position: found.position, theater: found.theater } : null);\r\n    setCastError(\"\");\r\n  }\r\n\r\n  function handleCastClockIn() {\r\n    if (!castSession) return;\r\n    setCastStatus(\"On Duty\");\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.castId === castSession.castId\r\n          ? { ...s, status: \"On Duty\" }\r\n          : s\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleCastGetAssignment() {\r\n    if (!castSession) return;\r\n    const assignment = getRandomAssignment(staffList);\r\n    setCastAssignment(assignment);\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.castId === castSession.castId\r\n          ? {\r\n              ...s,\r\n              position: assignment.position,\r\n              theater: assignment.theater,\r\n              status: \"On Duty\"\r\n            }\r\n          : s\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleCastLunch() {\r\n    if (!castSession) return;\r\n    setCastStatus(\"On Break\");\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.castId === castSession.castId && s.status === \"On Duty\"\r\n          ? { ...s, status: \"On Break\" }\r\n          : s\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleCastClockOut() {\r\n    if (!castSession) return;\r\n    setCastStatus(\"Off Duty\");\r\n    setCastAssignment(null);\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.castId === castSession.castId ? { ...s, status: \"Off Duty\" } : s\r\n      )\r\n    );\r\n  }\r\n\r\n  // Bump Out logic: swap break status with another cast member\r\n  function handleCastBumpOut(breakStaffId) {\r\n    if (!castSession) return;\r\n    setStaffList(list =>\r\n      list.map(s => {\r\n        if (s.id === breakStaffId) {\r\n          return { ...s, status: \"On Duty\" };\r\n        } else if (s.castId === castSession.castId) {\r\n          return { ...s, status: \"On Break\" };\r\n        } else {\r\n          return s;\r\n        }\r\n      })\r\n    );\r\n    setCastStatus(\"On Break\");\r\n  }\r\n\r\n  // --- Admin Features ---\r\n  const handleAddStaff = () => {\r\n    // Use a random name if none entered\r\n    const name = newStaffName.trim() || randomFullName(staffList.map(s => s.name));\r\n    const castId = newStaffCastId.trim() || randomCastId(staffList.map(s => s.castId));\r\n    setStaffList([\r\n      ...staffList,\r\n      {\r\n        id: nextStaffId,\r\n        castId,\r\n        name,\r\n        position: newStaffPosition === \"Gate\" ? `${newStaffTheater} Gate` : newStaffPosition,\r\n        theater: THEATER_POSITIONS.includes(newStaffPosition) ? newStaffTheater : null,\r\n        status: \"On Duty\",\r\n        breakTime: newStaffBreakTime,\r\n        efficiency: 85 + Math.floor(Math.random() * 15)\r\n      }\r\n    ]);\r\n    setNextStaffId(id => id + 1);\r\n    setNewStaffName(\"\");\r\n    setNewStaffCastId(\"\");\r\n    alert(\"Staff member added successfully!\");\r\n  };\r\n\r\n  // Leadership can move cast to any position/theater\r\n  const handleMoveStaff = (id, newPosition, newTheater) => {\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.id === id\r\n          ? {\r\n              ...s,\r\n              position: newPosition === \"Gate\" ? `${newTheater} Gate` : newPosition,\r\n              theater: THEATER_POSITIONS.includes(newPosition) ? newTheater : null\r\n            }\r\n          : s\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCastIdChange = (id, newCastId) => {\r\n    setStaffList(list =>\r\n      list.map(s =>\r\n        s.id === id ? { ...s, castId: newCastId } : s\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleBreakTimeChange = (id, newBreakTime) => {\r\n    setStaffList(staffList.map(staff =>\r\n      staff.id === id ? { ...staff, breakTime: newBreakTime } : staff\r\n    ));\r\n  };\r\n\r\n  // --- Guest/Wait Time Controls ---\r\n  const handleGuestCountChange = (amount) => {\r\n    setGuestCount(Math.max(0, guestCount + amount));\r\n  };\r\n\r\n  const handleCustomGuestCountChange = (newCount) => {\r\n    const count = parseInt(newCount);\r\n    if (!isNaN(count) && count >= 0) {\r\n      setGuestCount(count);\r\n    }\r\n  };\r\n\r\n  const handleLiveWaitTimeChange = (amount) => {\r\n    setLiveWaitTime(Math.max(0, liveWaitTime + amount));\r\n    setTimeout(updateHourlyWaitTimes, 10);\r\n  };\r\n\r\n  const handleCustomWaitTimeChange = (newTime) => {\r\n    const time = parseInt(newTime);\r\n    if (!isNaN(time) && time >= 0) {\r\n      setLiveWaitTime(time);\r\n      setTimeout(updateHourlyWaitTimes, 10);\r\n    }\r\n  };\r\n\r\n  const updateHourlyWaitTimes = () => {\r\n    const currentHour = new Date().getHours();\r\n    let hourString = currentHour >= 12\r\n      ? `${currentHour > 12 ? currentHour - 12 : currentHour} PM`\r\n      : `${currentHour === 0 ? 12 : currentHour} AM`;\r\n\r\n    setHourlyWaitTimes(hourlyWaitTimes.map(item =>\r\n      item.hour === hourString\r\n        ? { ...item, waitTime: liveWaitTime }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // --- Calculations ---\r\n  const averageWaitTime = Math.round(\r\n    hourlyWaitTimes.reduce((sum, item) => sum + item.waitTime, 0) / hourlyWaitTimes.length\r\n  );\r\n  const averageEfficiency = Math.round(\r\n    hourlyEfficiency.reduce((sum, item) => sum + item.efficiency, 0) / hourlyEfficiency.length\r\n  );\r\n\r\n  // --- Real-time Staffing Counts ---\r\n  function getStaffCount(theater, position) {\r\n    if (position === \"Gate\") position = `${theater} Gate`;\r\n    return staffList.filter(\r\n      s =>\r\n        s.status === \"On Duty\" &&\r\n        s.position === position &&\r\n        (s.theater === theater || !s.theater)\r\n    ).length;\r\n  }\r\n\r\n  // --- Live Wait Time Delta Logic ---\r\n  // Find the most recent hour in hourlyWaitTimes that matches liveWaitTime, or previous hour if not found\r\n  let liveIdx = hourlyWaitTimes.findIndex(item => item.waitTime === liveWaitTime);\r\n  if (liveIdx === -1) liveIdx = hourlyWaitTimes.length - 1;\r\n  const prevWaitTime = liveIdx > 0\r\n    ? hourlyWaitTimes[liveIdx - 1].waitTime\r\n    : hourlyWaitTimes[0].waitTime;\r\n  const liveDelta = liveWaitTime - prevWaitTime;\r\n  let liveColor = \"#10b981\"; // green\r\n  if (liveDelta > 2) liveColor = \"#ef4444\";\r\n  else if (Math.abs(liveDelta) <= 2) liveColor = \"#f59e0b\";\r\n\r\n  // --- UI Styles ---\r\n  const buttonStyle = {\r\n    padding: \"8px 14px\",\r\n    backgroundColor: \"#0066b2\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"14px\",\r\n    margin: \"0 8px 8px 0\"\r\n  };\r\n  const secondaryButtonStyle = {\r\n    ...buttonStyle,\r\n    backgroundColor: \"#10b981\"\r\n  };\r\n  const navButtonStyle = {\r\n    ...buttonStyle,\r\n    backgroundColor: \"#f1f5fb\",\r\n    color: \"#0066b2\",\r\n    border: \"1px solid #e0e8f5\"\r\n  };\r\n  const statusThStyle = {\r\n    padding: \"8px\",\r\n    border: \"1px solid #e0e8f5\",\r\n    backgroundColor: \"#f1f5fb\",\r\n    fontWeight: \"600\",\r\n    color: \"#0066b2\",\r\n    fontSize: \"13px\"\r\n  };\r\n  const statusTdStyle = {\r\n    padding: \"8px\",\r\n    border: \"1px solid #e0e8f5\",\r\n    textAlign: \"center\",\r\n    fontSize: \"13px\"\r\n  };\r\n\r\n  // --- Main Render ---\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"32px\",\r\n        backgroundColor: \"#f5f9ff\",\r\n        fontFamily: '\"Avenir Next\", \"Segoe UI\", Arial, sans-serif',\r\n        borderRadius: \"16px\",\r\n        boxShadow: \"0 4px 20px rgba(0,0,0,0.08)\",\r\n        maxWidth: \"1100px\",\r\n        margin: \"40px auto\",\r\n        border: \"1px solid #e0e8f5\"\r\n      }}\r\n    >\r\n      {/* ...header and other code unchanged... */}\r\n\r\n      {isAdminMode && !showCastAccess && (\r\n        <div>\r\n          {/* ...staff management and other dashboard code unchanged... */}\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: '30px',\r\n            flexWrap: 'wrap'\r\n          }}>\r\n            {/* Left Column ... unchanged ... */}\r\n            {/* Right Column */}\r\n            <div style={{ flex: 2, minWidth: '340px' }}>\r\n              {/* Efficiency Graph ... unchanged ... */}\r\n              {/* Live Wait Time */}\r\n              <div style={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '10px',\r\n                padding: '24px',\r\n                marginBottom: '20px',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\r\n                border: '1px solid #eef2f8'\r\n              }}>\r\n                <h3 style={{ color: '#0066b2', fontSize: '18px', margin: '0 0 10px 0' }}>Live Wait Time</h3>\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: 12, marginBottom: 10 }}>\r\n                  <span style={{\r\n                    fontSize: '32px',\r\n                    fontWeight: 'bold',\r\n                    color: liveColor,\r\n                    marginRight: 8\r\n                  }}>\r\n                    {liveWaitTime} min\r\n                  </span>\r\n                  <span style={{\r\n                    fontSize: '32px',\r\n                    fontWeight: 'bold',\r\n                    color: liveColor\r\n                  }}>\r\n                    {liveDelta > 0 ? \"+\" : \"\"}{liveDelta}\r\n                  </span>\r\n                </div>\r\n                <div style={{ display: 'flex', flexWrap: \"wrap\", gap: '8px', marginBottom: '10px' }}>\r\n                  <button onClick={() => handleLiveWaitTimeChange(1)} style={buttonStyle}>+1</button>\r\n                  <button onClick={() => handleLiveWaitTimeChange(-1)} style={buttonStyle}>-1</button>\r\n                  <button onClick={() => handleLiveWaitTimeChange(5)} style={buttonStyle}>+5</button>\r\n                  <button onClick={() => handleLiveWaitTimeChange(-5)} style={buttonStyle}>-5</button>\r\n                </div>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  value={liveWaitTime}\r\n                  onChange={e => handleCustomWaitTimeChange(e.target.value)}\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '8px',\r\n                    borderRadius: '5px',\r\n                    border: '1px solid #ddd',\r\n                    fontSize: '15px'\r\n                  }}\r\n                />\r\n              </div>\r\n              {/* Wait Time History ... unchanged ... */}\r\n              <div style={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '10px',\r\n                padding: '24px',\r\n                marginBottom: '20px',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\r\n                border: '1px solid #eef2f8'\r\n              }}>\r\n                <h3 style={{ color: '#0066b2', fontSize: '18px', margin: '0 0 10px 0' }}>Hourly Wait Times</h3>\r\n                <div style={{ overflowX: \"auto\" }}>\r\n                  <table style={{ width: '100%', borderCollapse: 'collapse', minWidth: 300 }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={statusThStyle}>Hour</th>\r\n                        <th style={statusThStyle}>Wait Time (min)</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {hourlyWaitTimes.map((item, idx) => (\r\n                        <tr key={idx}>\r\n                          <td style={statusTdStyle}>{item.hour}</td>\r\n                          <td style={statusTdStyle}>{waitTimeCell(hourlyWaitTimes, idx)}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div style={{ marginTop: '10px', color: '#637385', fontSize: '15px' }}>\r\n                  <b>Average Wait Time:</b> {averageWaitTime} min\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* ...rest of your component unchanged... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoarOps;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA,MAAMC,WAAW,GAAG,CAClB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAC1F,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAChG,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CACvG;AACD,MAAMC,UAAU,GAAG,CACjB,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EACtG,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAClG,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAC9F;;AAED;AACA,MAAMC,iBAAiB,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,mBAAmB,CAAC;AACrF,MAAMC,gBAAgB,GAAG,CACvB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,WAAW,EACX,cAAc,EACd,WAAW,EACX,OAAO,CACR;AACD,MAAMC,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChC,MAAMC,aAAa,GAAG;EAAEC,CAAC,EAAE,WAAW;EAAEC,CAAC,EAAE,WAAW;EAAEC,CAAC,EAAE;AAAY,CAAC;;AAExE;AACA,SAASC,SAASA,CAACC,GAAG,EAAE;EACtB,OAAOA,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC;AACpD;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,MAAMC,IAAI,GAAG,EAAE,GAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,MAAMI,GAAG,GAAGN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI;EAC7C,OAAO,GAAGG,IAAI,IAAIC,GAAG,EAAE;AACzB;AACA,SAASC,cAAcA,CAACC,aAAa,GAAG,EAAE,EAAE;EAC1C,IAAIC,IAAI;EACR,GAAG;IACDA,IAAI,GAAG,GAAGX,SAAS,CAACT,WAAW,CAAC,IAAIS,SAAS,CAACR,UAAU,CAAC,EAAE;EAC7D,CAAC,QAAQkB,aAAa,CAACE,QAAQ,CAACD,IAAI,CAAC;EACrC,OAAOA,IAAI;AACb;AACA,SAASE,YAAYA,CAACC,WAAW,GAAG,EAAE,EAAE;EACtC,IAAIC,EAAE;EACN,GAAG;IACDA,EAAE,GAAGC,MAAM,CAAC,MAAM,GAAGd,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;EAC1D,CAAC,QAAQU,WAAW,CAACF,QAAQ,CAACG,EAAE,CAAC;EACjC,OAAOA,EAAE;AACX;;AAEA;AACA,SAASE,oBAAoBA,CAAA,EAAG;EAC9B,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIH,EAAE,GAAG,CAAC;EACV,IAAII,SAAS,GAAG,EAAE;EAClB,IAAIC,OAAO,GAAG,EAAE;EAChB;EACA,KAAK,IAAIC,OAAO,IAAI1B,QAAQ,EAAE;IAC5B,KAAK,IAAI2B,GAAG,IAAI7B,iBAAiB,EAAE;MACjC,IAAI8B,QAAQ,GAAGD,GAAG,KAAK,MAAM,GAAG,GAAGD,OAAO,OAAO,GAAGC,GAAG;MACvD,IAAIX,IAAI,GAAGF,cAAc,CAACU,SAAS,CAAC;MACpC,IAAIK,MAAM,GAAGX,YAAY,CAACO,OAAO,CAAC;MAClCD,SAAS,CAACM,IAAI,CAACd,IAAI,CAAC;MACpBS,OAAO,CAACK,IAAI,CAACD,MAAM,CAAC;MACpBN,KAAK,CAACO,IAAI,CAAC;QACTV,EAAE,EAAEA,EAAE,EAAE;QACRS,MAAM;QACNb,IAAI;QACJY,QAAQ;QACRF,OAAO;QACPK,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAErB,kBAAkB,CAAC,CAAC;QAC/BsB,UAAU,EAAE,EAAE,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;MAChD,CAAC,CAAC;IACJ;EACF;EACA;EACA,KAAK,IAAIkB,GAAG,IAAI5B,gBAAgB,EAAE;IAChC,IAAIiB,IAAI,GAAGF,cAAc,CAACU,SAAS,CAAC;IACpC,IAAIK,MAAM,GAAGX,YAAY,CAACO,OAAO,CAAC;IAClCD,SAAS,CAACM,IAAI,CAACd,IAAI,CAAC;IACpBS,OAAO,CAACK,IAAI,CAACD,MAAM,CAAC;IACpBN,KAAK,CAACO,IAAI,CAAC;MACTV,EAAE,EAAEA,EAAE,EAAE;MACRS,MAAM;MACNb,IAAI;MACJY,QAAQ,EAAED,GAAG;MACbD,OAAO,EAAE,IAAI;MACbK,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAErB,kBAAkB,CAAC,CAAC;MAC/BsB,UAAU,EAAE,EAAE,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;IAChD,CAAC,CAAC;EACJ;EACA;EACA,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIlB,IAAI,GAAGF,cAAc,CAACU,SAAS,CAAC;IACpC,IAAIK,MAAM,GAAGX,YAAY,CAACO,OAAO,CAAC;IAClCD,SAAS,CAACM,IAAI,CAACd,IAAI,CAAC;IACpBS,OAAO,CAACK,IAAI,CAACD,MAAM,CAAC;IACpBN,KAAK,CAACO,IAAI,CAAC;MACTV,EAAE,EAAEA,EAAE,EAAE;MACRS,MAAM;MACNb,IAAI;MACJY,QAAQ,EAAE,YAAY;MACtBF,OAAO,EAAE,IAAI;MACbK,MAAM,EAAE,UAAU;MAClBC,SAAS,EAAErB,kBAAkB,CAAC,CAAC;MAC/BsB,UAAU,EAAE,EAAE,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;IAChD,CAAC,CAAC;EACJ;EACA,OAAOc,KAAK;AACd;;AAEA;AACA,SAASY,mBAAmBA,CAACC,SAAS,EAAE;EACtC;EACA,IAAI7B,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;IACvB,KAAK,IAAIiB,OAAO,IAAI1B,QAAQ,EAAE;MAC5B,IAAI,CAACoC,SAAS,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,QAAQ,KAAK,OAAO,IAAIU,CAAC,CAACZ,OAAO,KAAKA,OAAO,IAAIY,CAAC,CAACP,MAAM,KAAK,SAAS,CAAC,EAAE;QACnG,OAAO;UAAEH,QAAQ,EAAE,OAAO;UAAEF;QAAQ,CAAC;MACvC;IACF;EACF;EACA;EACA,MAAMa,qBAAqB,GAAGzC,iBAAiB,CAAC0C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,OAAO,CAAC;EAC1E,KAAK,IAAId,GAAG,IAAIY,qBAAqB,EAAE;IACrC,KAAK,IAAIb,OAAO,IAAI1B,QAAQ,EAAE;MAC5B,IAAI4B,QAAQ,GAAGD,GAAG,KAAK,MAAM,GAAG,GAAGD,OAAO,OAAO,GAAGC,GAAG;MACvD,IAAI,CAACS,SAAS,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,QAAQ,KAAKA,QAAQ,IAAIU,CAAC,CAACZ,OAAO,KAAKA,OAAO,IAAIY,CAAC,CAACP,MAAM,KAAK,SAAS,CAAC,EAAE;QACpG,OAAO;UAAEH,QAAQ;UAAEF;QAAQ,CAAC;MAC9B;IACF;EACF;EACA;EACA,KAAK,IAAIC,GAAG,IAAI5B,gBAAgB,EAAE;IAChC,IAAI,CAACqC,SAAS,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,QAAQ,KAAKD,GAAG,IAAIW,CAAC,CAACP,MAAM,KAAK,SAAS,CAAC,EAAE;MACtE,OAAO;QAAEH,QAAQ,EAAED,GAAG;QAAED,OAAO,EAAE;MAAK,CAAC;IACzC;EACF;EACA;EACA,OAAO;IAAEE,QAAQ,EAAE,QAAQ;IAAEF,OAAO,EAAErB,SAAS,CAACL,QAAQ;EAAE,CAAC;AAC7D;AAEA,SAAS0C,eAAeA,CAACC,GAAG,EAAE;EAC5B,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,SAAS;EAC/B,IAAIA,GAAG,IAAI,EAAE,EAAE,OAAO,SAAS;EAC/B,OAAO,SAAS;AAClB;;AAEA;AACA,SAASC,YAAYA,CAACC,eAAe,EAAEC,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAGF,eAAe,CAACC,GAAG,CAAC;EACjC,MAAME,IAAI,GAAGF,GAAG,GAAG,CAAC,GAAGD,eAAe,CAACC,GAAG,GAAG,CAAC,CAAC,CAACG,QAAQ,GAAGF,IAAI,CAACE,QAAQ;EACxE,MAAMC,KAAK,GAAGH,IAAI,CAACE,QAAQ,GAAGD,IAAI;EAClC,IAAIG,KAAK,GAAG,SAAS,CAAC,CAAC;EACvB,IAAID,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,SAAS,CAAC,CAAC;EAAA,KAC7B,IAAI5C,IAAI,CAAC6C,GAAG,CAACF,KAAK,CAAC,IAAI,CAAC,EAAEC,KAAK,GAAG,SAAS,CAAC,CAAC;EAClD,oBACEzD,KAAA,CAAA2D,aAAA;IAAMC,KAAK,EAAE;MAAEH,KAAK;MAAEI,UAAU,EAAE;IAAO,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxCd,IAAI,CAACE,QAAQ,EAAE,GAAG,eACnBvD,KAAA,CAAA2D,aAAA;IAAMC,KAAK,EAAE;MAAEC,UAAU,EAAE,GAAG;MAAEO,QAAQ,EAAE;IAAG,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAC7C,EAACX,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEA,KAAK,EAAC,GAC1B,CACF,CAAC;AAEX;AAEA,SAASa,OAAOA,CAAA,EAAG;EACjB;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuE,SAAS,EAAEC,YAAY,CAAC,GAAGxE,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyE,WAAW,EAAEC,cAAc,CAAC,GAAG1E,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2E,cAAc,EAAEC,iBAAiB,CAAC,GAAG5E,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM,CAAC6E,UAAU,EAAEC,aAAa,CAAC,GAAG9E,QAAQ,CAAC,UAAU,CAAC;EACxD,MAAM,CAAC+E,cAAc,EAAEC,iBAAiB,CAAC,GAAGhF,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACiF,WAAW,EAAEC,cAAc,CAAC,GAAGlF,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmF,WAAW,EAAEC,cAAc,CAAC,GAAGpF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACqF,SAAS,EAAEC,YAAY,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACyC,SAAS,EAAE8C,YAAY,CAAC,GAAGvF,QAAQ,CAAC2B,oBAAoB,CAAC,CAAC,CAAC;EAClE,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAGzF,QAAQ,CAAC,GAAG,CAAC;;EAEnD;EACA,MAAM,CAAC0F,YAAY,EAAEC,eAAe,CAAC,GAAG3F,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4F,cAAc,EAAEC,iBAAiB,CAAC,GAAG7F,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8F,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/F,QAAQ,CAACG,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAC9E,MAAM,CAAC6F,eAAe,EAAEC,kBAAkB,CAAC,GAAGjG,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnE,MAAM,CAAC6F,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnG,QAAQ,CAACgB,kBAAkB,CAAC,CAAC,CAAC;;EAEhF;EACA,MAAM,CAACoF,UAAU,EAAEC,aAAa,CAAC,GAAGrG,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsG,YAAY,EAAEC,eAAe,CAAC,GAAGvG,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkD,eAAe,EAAEsD,kBAAkB,CAAC,GAAGxG,QAAQ,CAAC,CACrD;IAAEiB,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,OAAO;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC/B;IAAErC,IAAI,EAAE,OAAO;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC/B;IAAErC,IAAI,EAAE,OAAO;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC/B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,EAC9B;IAAErC,IAAI,EAAE,MAAM;IAAEqC,QAAQ,EAAE;EAAG,CAAC,CAC/B,CAAC;EACF,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1G,QAAQ,CAAC,CACvD;IAAEiB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,OAAO;IAAEqB,UAAU,EAAE;EAAG,CAAC,EACjC;IAAErB,IAAI,EAAE,OAAO;IAAEqB,UAAU,EAAE;EAAG,CAAC,EACjC;IAAErB,IAAI,EAAE,OAAO;IAAEqB,UAAU,EAAE;EAAG,CAAC,EACjC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,EAChC;IAAErB,IAAI,EAAE,MAAM;IAAEqB,UAAU,EAAE;EAAG,CAAC,CACjC,CAAC;EACF,MAAM,CAACqE,aAAa,EAAEC,gBAAgB,CAAC,GAAG5G,QAAQ,CAAC;IACjDO,CAAC,EAAE,aAAa;IAChBC,CAAC,EAAE,aAAa;IAChBC,CAAC,EAAE;EACL,CAAC,CAAC;;EAEF;EACA,MAAMoG,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAItC,SAAS,KAAK,WAAW,EAAE;MAC7BG,cAAc,CAAC,IAAI,CAAC;MACpBJ,iBAAiB,CAAC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLwC,KAAK,CAAC,0EAA0E,CAAC;IACnF;EACF,CAAC;;EAED;EACA,SAASC,kBAAkBA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB3B,YAAY,CAAC,EAAE,CAAC;IAChB,MAAM4B,KAAK,GAAGzE,SAAS,CAAC0E,IAAI,CAACxE,CAAC,IAAIA,CAAC,CAACT,MAAM,KAAK+C,WAAW,CAAC;IAC3D,IAAI,CAACiC,KAAK,EAAE;MACV9B,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,sCAAsC,CAAC;MACpDR,aAAa,CAAC,UAAU,CAAC;MACzBE,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACF;IACAI,cAAc,CAAC8B,KAAK,CAAC;IACrBpC,aAAa,CAACoC,KAAK,CAAC9E,MAAM,CAAC;IAC3B4C,iBAAiB,CAACkC,KAAK,CAACjF,QAAQ,KAAK,YAAY,GAAG;MAAEA,QAAQ,EAAEiF,KAAK,CAACjF,QAAQ;MAAEF,OAAO,EAAEmF,KAAK,CAACnF;IAAQ,CAAC,GAAG,IAAI,CAAC;IAChHuD,YAAY,CAAC,EAAE,CAAC;EAClB;EAEA,SAAS8B,iBAAiBA,CAAA,EAAG;IAC3B,IAAI,CAACjC,WAAW,EAAE;IAClBL,aAAa,CAAC,SAAS,CAAC;IACxBS,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAACT,MAAM,KAAKiD,WAAW,CAACjD,MAAM,GAC3B;MAAE,GAAGS,CAAC;MAAEP,MAAM,EAAE;IAAU,CAAC,GAC3BO,CACN,CACF,CAAC;EACH;EAEA,SAAS4E,uBAAuBA,CAAA,EAAG;IACjC,IAAI,CAACpC,WAAW,EAAE;IAClB,MAAMqC,UAAU,GAAGhF,mBAAmB,CAACC,SAAS,CAAC;IACjDuC,iBAAiB,CAACwC,UAAU,CAAC;IAC7BjC,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAACT,MAAM,KAAKiD,WAAW,CAACjD,MAAM,GAC3B;MACE,GAAGS,CAAC;MACJV,QAAQ,EAAEuF,UAAU,CAACvF,QAAQ;MAC7BF,OAAO,EAAEyF,UAAU,CAACzF,OAAO;MAC3BK,MAAM,EAAE;IACV,CAAC,GACDO,CACN,CACF,CAAC;EACH;EAEA,SAAS8E,eAAeA,CAAA,EAAG;IACzB,IAAI,CAACtC,WAAW,EAAE;IAClBL,aAAa,CAAC,UAAU,CAAC;IACzBS,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAACT,MAAM,KAAKiD,WAAW,CAACjD,MAAM,IAAIS,CAAC,CAACP,MAAM,KAAK,SAAS,GACrD;MAAE,GAAGO,CAAC;MAAEP,MAAM,EAAE;IAAW,CAAC,GAC5BO,CACN,CACF,CAAC;EACH;EAEA,SAAS+E,kBAAkBA,CAAA,EAAG;IAC5B,IAAI,CAACvC,WAAW,EAAE;IAClBL,aAAa,CAAC,UAAU,CAAC;IACzBE,iBAAiB,CAAC,IAAI,CAAC;IACvBO,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAACT,MAAM,KAAKiD,WAAW,CAACjD,MAAM,GAAG;MAAE,GAAGS,CAAC;MAAEP,MAAM,EAAE;IAAW,CAAC,GAAGO,CACnE,CACF,CAAC;EACH;;EAEA;EACA,SAASgF,iBAAiBA,CAACC,YAAY,EAAE;IACvC,IAAI,CAACzC,WAAW,EAAE;IAClBI,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IAAI;MACZ,IAAIA,CAAC,CAAClB,EAAE,KAAKmG,YAAY,EAAE;QACzB,OAAO;UAAE,GAAGjF,CAAC;UAAEP,MAAM,EAAE;QAAU,CAAC;MACpC,CAAC,MAAM,IAAIO,CAAC,CAACT,MAAM,KAAKiD,WAAW,CAACjD,MAAM,EAAE;QAC1C,OAAO;UAAE,GAAGS,CAAC;UAAEP,MAAM,EAAE;QAAW,CAAC;MACrC,CAAC,MAAM;QACL,OAAOO,CAAC;MACV;IACF,CAAC,CACH,CAAC;IACDmC,aAAa,CAAC,UAAU,CAAC;EAC3B;;EAEA;EACA,MAAM+C,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMxG,IAAI,GAAGqE,YAAY,CAACoC,IAAI,CAAC,CAAC,IAAI3G,cAAc,CAACsB,SAAS,CAAC6E,GAAG,CAAC3E,CAAC,IAAIA,CAAC,CAACtB,IAAI,CAAC,CAAC;IAC9E,MAAMa,MAAM,GAAG0D,cAAc,CAACkC,IAAI,CAAC,CAAC,IAAIvG,YAAY,CAACkB,SAAS,CAAC6E,GAAG,CAAC3E,CAAC,IAAIA,CAAC,CAACT,MAAM,CAAC,CAAC;IAClFqD,YAAY,CAAC,CACX,GAAG9C,SAAS,EACZ;MACEhB,EAAE,EAAE+D,WAAW;MACftD,MAAM;MACNb,IAAI;MACJY,QAAQ,EAAE6D,gBAAgB,KAAK,MAAM,GAAG,GAAGE,eAAe,OAAO,GAAGF,gBAAgB;MACpF/D,OAAO,EAAE5B,iBAAiB,CAACmB,QAAQ,CAACwE,gBAAgB,CAAC,GAAGE,eAAe,GAAG,IAAI;MAC9E5D,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE6D,iBAAiB;MAC5B5D,UAAU,EAAE,EAAE,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;IAChD,CAAC,CACF,CAAC;IACF2E,cAAc,CAAChE,EAAE,IAAIA,EAAE,GAAG,CAAC,CAAC;IAC5BkE,eAAe,CAAC,EAAE,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;IACrBiB,KAAK,CAAC,kCAAkC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMiB,eAAe,GAAGA,CAACtG,EAAE,EAAEuG,WAAW,EAAEC,UAAU,KAAK;IACvD1C,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAAClB,EAAE,KAAKA,EAAE,GACP;MACE,GAAGkB,CAAC;MACJV,QAAQ,EAAE+F,WAAW,KAAK,MAAM,GAAG,GAAGC,UAAU,OAAO,GAAGD,WAAW;MACrEjG,OAAO,EAAE5B,iBAAiB,CAACmB,QAAQ,CAAC0G,WAAW,CAAC,GAAGC,UAAU,GAAG;IAClE,CAAC,GACDtF,CACN,CACF,CAAC;EACH,CAAC;EAED,MAAMuF,kBAAkB,GAAGA,CAACzG,EAAE,EAAE0G,SAAS,KAAK;IAC5C5C,YAAY,CAAC8B,IAAI,IACfA,IAAI,CAACC,GAAG,CAAC3E,CAAC,IACRA,CAAC,CAAClB,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGkB,CAAC;MAAET,MAAM,EAAEiG;IAAU,CAAC,GAAGxF,CAC9C,CACF,CAAC;EACH,CAAC;EAED,MAAMyF,qBAAqB,GAAGA,CAAC3G,EAAE,EAAE4G,YAAY,KAAK;IAClD9C,YAAY,CAAC9C,SAAS,CAAC6E,GAAG,CAAC1F,KAAK,IAC9BA,KAAK,CAACH,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGG,KAAK;MAAES,SAAS,EAAEgG;IAAa,CAAC,GAAGzG,KAC5D,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM0G,sBAAsB,GAAIC,MAAM,IAAK;IACzClC,aAAa,CAACzF,IAAI,CAAC4H,GAAG,CAAC,CAAC,EAAEpC,UAAU,GAAGmC,MAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,4BAA4B,GAAIC,QAAQ,IAAK;IACjD,MAAMC,KAAK,GAAGC,QAAQ,CAACF,QAAQ,CAAC;IAChC,IAAI,CAACG,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,EAAE;MAC/BtC,aAAa,CAACsC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMG,wBAAwB,GAAIP,MAAM,IAAK;IAC3ChC,eAAe,CAAC3F,IAAI,CAAC4H,GAAG,CAAC,CAAC,EAAElC,YAAY,GAAGiC,MAAM,CAAC,CAAC;IACnDQ,UAAU,CAACC,qBAAqB,EAAE,EAAE,CAAC;EACvC,CAAC;EAED,MAAMC,0BAA0B,GAAIC,OAAO,IAAK;IAC9C,MAAMC,IAAI,GAAGP,QAAQ,CAACM,OAAO,CAAC;IAC9B,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,EAAE;MAC7B5C,eAAe,CAAC4C,IAAI,CAAC;MACrBJ,UAAU,CAACC,qBAAqB,EAAE,EAAE,CAAC;IACvC;EACF,CAAC;EAED,MAAMA,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMI,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzC,IAAIC,UAAU,GAAGH,WAAW,IAAI,EAAE,GAC9B,GAAGA,WAAW,GAAG,EAAE,GAAGA,WAAW,GAAG,EAAE,GAAGA,WAAW,KAAK,GACzD,GAAGA,WAAW,KAAK,CAAC,GAAG,EAAE,GAAGA,WAAW,KAAK;IAEhD5C,kBAAkB,CAACtD,eAAe,CAACoE,GAAG,CAAClE,IAAI,IACzCA,IAAI,CAACnC,IAAI,KAAKsI,UAAU,GACpB;MAAE,GAAGnG,IAAI;MAAEE,QAAQ,EAAEgD;IAAa,CAAC,GACnClD,IACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMoG,eAAe,GAAG5I,IAAI,CAAC6I,KAAK,CAChCvG,eAAe,CAACwG,MAAM,CAAC,CAACC,GAAG,EAAEvG,IAAI,KAAKuG,GAAG,GAAGvG,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC,GAAGJ,eAAe,CAACnC,MAClF,CAAC;EACD,MAAM6I,iBAAiB,GAAGhJ,IAAI,CAAC6I,KAAK,CAClChD,gBAAgB,CAACiD,MAAM,CAAC,CAACC,GAAG,EAAEvG,IAAI,KAAKuG,GAAG,GAAGvG,IAAI,CAACd,UAAU,EAAE,CAAC,CAAC,GAAGmE,gBAAgB,CAAC1F,MACtF,CAAC;;EAED;EACA,SAAS8I,aAAaA,CAAC9H,OAAO,EAAEE,QAAQ,EAAE;IACxC,IAAIA,QAAQ,KAAK,MAAM,EAAEA,QAAQ,GAAG,GAAGF,OAAO,OAAO;IACrD,OAAOU,SAAS,CAACI,MAAM,CACrBF,CAAC,IACCA,CAAC,CAACP,MAAM,KAAK,SAAS,IACtBO,CAAC,CAACV,QAAQ,KAAKA,QAAQ,KACtBU,CAAC,CAACZ,OAAO,KAAKA,OAAO,IAAI,CAACY,CAAC,CAACZ,OAAO,CACxC,CAAC,CAAChB,MAAM;EACV;;EAEA;EACA;EACA,IAAI+I,OAAO,GAAG5G,eAAe,CAAC6G,SAAS,CAAC3G,IAAI,IAAIA,IAAI,CAACE,QAAQ,KAAKgD,YAAY,CAAC;EAC/E,IAAIwD,OAAO,KAAK,CAAC,CAAC,EAAEA,OAAO,GAAG5G,eAAe,CAACnC,MAAM,GAAG,CAAC;EACxD,MAAMiJ,YAAY,GAAGF,OAAO,GAAG,CAAC,GAC5B5G,eAAe,CAAC4G,OAAO,GAAG,CAAC,CAAC,CAACxG,QAAQ,GACrCJ,eAAe,CAAC,CAAC,CAAC,CAACI,QAAQ;EAC/B,MAAM2G,SAAS,GAAG3D,YAAY,GAAG0D,YAAY;EAC7C,IAAIE,SAAS,GAAG,SAAS,CAAC,CAAC;EAC3B,IAAID,SAAS,GAAG,CAAC,EAAEC,SAAS,GAAG,SAAS,CAAC,KACpC,IAAItJ,IAAI,CAAC6C,GAAG,CAACwG,SAAS,CAAC,IAAI,CAAC,EAAEC,SAAS,GAAG,SAAS;;EAExD;EACA,MAAMC,WAAW,GAAG;IAClBC,OAAO,EAAE,UAAU;IACnBC,eAAe,EAAE,SAAS;IAC1B7G,KAAK,EAAE,OAAO;IACd8G,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjB5G,UAAU,EAAE,KAAK;IACjBO,QAAQ,EAAE,MAAM;IAChBsG,MAAM,EAAE;EACV,CAAC;EACD,MAAMC,oBAAoB,GAAG;IAC3B,GAAGP,WAAW;IACdE,eAAe,EAAE;EACnB,CAAC;EACD,MAAMM,cAAc,GAAG;IACrB,GAAGR,WAAW;IACdE,eAAe,EAAE,SAAS;IAC1B7G,KAAK,EAAE,SAAS;IAChB8G,MAAM,EAAE;EACV,CAAC;EACD,MAAMM,aAAa,GAAG;IACpBR,OAAO,EAAE,KAAK;IACdE,MAAM,EAAE,mBAAmB;IAC3BD,eAAe,EAAE,SAAS;IAC1BzG,UAAU,EAAE,KAAK;IACjBJ,KAAK,EAAE,SAAS;IAChBW,QAAQ,EAAE;EACZ,CAAC;EACD,MAAM0G,aAAa,GAAG;IACpBT,OAAO,EAAE,KAAK;IACdE,MAAM,EAAE,mBAAmB;IAC3BQ,SAAS,EAAE,QAAQ;IACnB3G,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,oBACEpE,KAAA,CAAA2D,aAAA;IACEC,KAAK,EAAE;MACLyG,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,SAAS;MAC1BU,UAAU,EAAE,8CAA8C;MAC1DR,YAAY,EAAE,MAAM;MACpBS,SAAS,EAAE,6BAA6B;MACxCC,QAAQ,EAAE,QAAQ;MAClBR,MAAM,EAAE,WAAW;MACnBH,MAAM,EAAE;IACV,CAAE;IAAAzG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAIDO,WAAW,IAAI,CAACE,cAAc,iBAC7B5E,KAAA,CAAA2D,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEEnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MACVuH,OAAO,EAAE,MAAM;MACfC,GAAG,EAAE,MAAM;MACXC,QAAQ,EAAE;IACZ,CAAE;IAAAvH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGAnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MAAE0H,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAzH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGzCnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MACV0G,eAAe,EAAE,OAAO;MACxBE,YAAY,EAAE,MAAM;MACpBH,OAAO,EAAE,MAAM;MACfmB,YAAY,EAAE,MAAM;MACpBP,SAAS,EAAE,6BAA6B;MACxCV,MAAM,EAAE;IACV,CAAE;IAAAzG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACAnE,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAE;MAAEH,KAAK,EAAE,SAAS;MAAEW,QAAQ,EAAE,MAAM;MAAEsG,MAAM,EAAE;IAAa,CAAE;IAAA5G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAkB,CAAC,eAC5FnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MAAEuH,OAAO,EAAE,MAAM;MAAEM,UAAU,EAAE,QAAQ;MAAEL,GAAG,EAAE,EAAE;MAAEI,YAAY,EAAE;IAAG,CAAE;IAAA1H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/EnE,KAAA,CAAA2D,aAAA;IAAMC,KAAK,EAAE;MACXQ,QAAQ,EAAE,MAAM;MAChBP,UAAU,EAAE,MAAM;MAClBJ,KAAK,EAAE0G,SAAS;MAChBuB,WAAW,EAAE;IACf,CAAE;IAAA5H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACCoC,YAAY,EAAC,MACV,CAAC,eACPvG,KAAA,CAAA2D,aAAA;IAAMC,KAAK,EAAE;MACXQ,QAAQ,EAAE,MAAM;MAChBP,UAAU,EAAE,MAAM;MAClBJ,KAAK,EAAE0G;IACT,CAAE;IAAArG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACC+F,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEA,SACvB,CACH,CAAC,eACNlK,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MAAEuH,OAAO,EAAE,MAAM;MAAEE,QAAQ,EAAE,MAAM;MAAED,GAAG,EAAE,KAAK;MAAEI,YAAY,EAAE;IAAO,CAAE;IAAA1H,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClFnE,KAAA,CAAA2D,aAAA;IAAQgI,OAAO,EAAEA,CAAA,KAAM5C,wBAAwB,CAAC,CAAC,CAAE;IAACnF,KAAK,EAAEwG,WAAY;IAAAtG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAAU,CAAC,eACnFnE,KAAA,CAAA2D,aAAA;IAAQgI,OAAO,EAAEA,CAAA,KAAM5C,wBAAwB,CAAC,CAAC,CAAC,CAAE;IAACnF,KAAK,EAAEwG,WAAY;IAAAtG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAAU,CAAC,eACpFnE,KAAA,CAAA2D,aAAA;IAAQgI,OAAO,EAAEA,CAAA,KAAM5C,wBAAwB,CAAC,CAAC,CAAE;IAACnF,KAAK,EAAEwG,WAAY;IAAAtG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAAU,CAAC,eACnFnE,KAAA,CAAA2D,aAAA;IAAQgI,OAAO,EAAEA,CAAA,KAAM5C,wBAAwB,CAAC,CAAC,CAAC,CAAE;IAACnF,KAAK,EAAEwG,WAAY;IAAAtG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,IAAU,CAChF,CAAC,eACNnE,KAAA,CAAA2D,aAAA;IACEiI,IAAI,EAAC,QAAQ;IACbzK,GAAG,EAAC,GAAG;IACP0K,KAAK,EAAEtF,YAAa;IACpBuF,QAAQ,EAAE7E,CAAC,IAAIiC,0BAA0B,CAACjC,CAAC,CAAC8E,MAAM,CAACF,KAAK,CAAE;IAC1DjI,KAAK,EAAE;MACLoI,KAAK,EAAE,MAAM;MACb3B,OAAO,EAAE,KAAK;MACdG,YAAY,EAAE,KAAK;MACnBD,MAAM,EAAE,gBAAgB;MACxBnG,QAAQ,EAAE;IACZ,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACE,CAAC,eAENnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MACV0G,eAAe,EAAE,OAAO;MACxBE,YAAY,EAAE,MAAM;MACpBH,OAAO,EAAE,MAAM;MACfmB,YAAY,EAAE,MAAM;MACpBP,SAAS,EAAE,6BAA6B;MACxCV,MAAM,EAAE;IACV,CAAE;IAAAzG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACAnE,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAE;MAAEH,KAAK,EAAE,SAAS;MAAEW,QAAQ,EAAE,MAAM;MAAEsG,MAAM,EAAE;IAAa,CAAE;IAAA5G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAqB,CAAC,eAC/FnE,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MAAEqI,SAAS,EAAE;IAAO,CAAE;IAAAnI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCnE,KAAA,CAAA2D,aAAA;IAAOC,KAAK,EAAE;MAAEoI,KAAK,EAAE,MAAM;MAAEE,cAAc,EAAE,UAAU;MAAEX,QAAQ,EAAE;IAAI,CAAE;IAAAzH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzEnE,KAAA,CAAA2D,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA2D,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnE,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAEiH,aAAc;IAAA/G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAQ,CAAC,eACnCnE,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAEiH,aAAc;IAAA/G,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAmB,CAC3C,CACC,CAAC,eACRnE,KAAA,CAAA2D,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGhB,eAAe,CAACoE,GAAG,CAAC,CAAClE,IAAI,EAAED,GAAG,kBAC7BpD,KAAA,CAAA2D,aAAA;IAAIwI,GAAG,EAAE/I,GAAI;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXnE,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAEkH,aAAc;IAAAhH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,IAAI,CAACnC,IAAS,CAAC,eAC1ClB,KAAA,CAAA2D,aAAA;IAAIC,KAAK,EAAEkH,aAAc;IAAAhH,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEjB,YAAY,CAACC,eAAe,EAAEC,GAAG,CAAM,CAChE,CACL,CACI,CACF,CACJ,CAAC,eACNpD,KAAA,CAAA2D,aAAA;IAAKC,KAAK,EAAE;MAAEwI,SAAS,EAAE,MAAM;MAAE3I,KAAK,EAAE,SAAS;MAAEW,QAAQ,EAAE;IAAO,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpEnE,KAAA,CAAA2D,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,oBAAqB,CAAC,KAAC,EAACsF,eAAe,EAAC,MACxC,CACF,CACF,CACF,CACF,CAGJ,CAAC;AAEV;AAEA,eAAepF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}