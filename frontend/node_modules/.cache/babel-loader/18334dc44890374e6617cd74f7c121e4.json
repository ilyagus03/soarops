{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clayf\\\\OneDrive\\\\Documents\\\\GitHub\\\\soarops\\\\frontend\\\\src\\\\Demo.js\";\nimport React, { useState, useEffect } from 'react';\nfunction Demo() {\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [showAdminModal, setShowAdminModal] = useState(false);\n  const [adminCode, setAdminCode] = useState('');\n  const [isAdminMode, setIsAdminMode] = useState(false);\n\n  // Guest count state\n  const [guestCount, setGuestCount] = useState(36542);\n\n  // Wait time states\n  const [liveWaitTime, setLiveWaitTime] = useState(45);\n  const [hourlyWaitTimes, setHourlyWaitTimes] = useState([{\n    hour: '8 AM',\n    waitTime: 30\n  }, {\n    hour: '9 AM',\n    waitTime: 35\n  }, {\n    hour: '10 AM',\n    waitTime: 50\n  }, {\n    hour: '11 AM',\n    waitTime: 65\n  }, {\n    hour: '12 PM',\n    waitTime: 70\n  }, {\n    hour: '1 PM',\n    waitTime: 55\n  }, {\n    hour: '2 PM',\n    waitTime: 45\n  }, {\n    hour: '3 PM',\n    waitTime: 40\n  }, {\n    hour: '4 PM',\n    waitTime: 35\n  }, {\n    hour: '5 PM',\n    waitTime: 40\n  }, {\n    hour: '6 PM',\n    waitTime: 30\n  }, {\n    hour: '7 PM',\n    waitTime: 25\n  }]);\n\n  // Hourly efficiency data for the graph\n  const [hourlyEfficiency] = useState([{\n    hour: '8 AM',\n    efficiency: 91\n  }, {\n    hour: '9 AM',\n    efficiency: 93\n  }, {\n    hour: '10 AM',\n    efficiency: 96\n  }, {\n    hour: '11 AM',\n    efficiency: 94\n  }, {\n    hour: '12 PM',\n    efficiency: 89\n  }, {\n    hour: '1 PM',\n    efficiency: 87\n  }, {\n    hour: '2 PM',\n    efficiency: 90\n  }, {\n    hour: '3 PM',\n    efficiency: 94\n  }, {\n    hour: '4 PM',\n    efficiency: 96\n  }, {\n    hour: '5 PM',\n    efficiency: 97\n  }, {\n    hour: '6 PM',\n    efficiency: 95\n  }, {\n    hour: '7 PM',\n    efficiency: 92\n  }]);\n\n  // Theater status management\n  const [theaterStatus, setTheaterStatus] = useState({\n    'A': 'Operational',\n    'B': 'Operational',\n    'C': 'Maintenance'\n  });\n  const [staffList, setStaffList] = useState([{\n    id: 1,\n    name: 'John Smith',\n    position: 'Lead',\n    theater: 'A',\n    efficiency: 95\n  }, {\n    id: 2,\n    name: 'Sarah Johnson',\n    position: 'Operator',\n    theater: 'A',\n    efficiency: 92\n  }, {\n    id: 3,\n    name: 'Michael Brown',\n    position: 'Greeter',\n    theater: 'A',\n    efficiency: 88\n  }, {\n    id: 4,\n    name: 'Emily Davis',\n    position: 'Operator',\n    theater: 'B',\n    efficiency: 94\n  }, {\n    id: 5,\n    name: 'David Wilson',\n    position: 'Lead',\n    theater: 'B',\n    efficiency: 90\n  }, {\n    id: 6,\n    name: 'Jessica Taylor',\n    position: 'Greeter',\n    theater: 'B',\n    efficiency: 89\n  }, {\n    id: 7,\n    name: 'Robert Martinez',\n    position: 'Lead',\n    theater: 'C',\n    efficiency: 91\n  }, {\n    id: 8,\n    name: 'Lisa Anderson',\n    position: 'Operator',\n    theater: 'C',\n    efficiency: 87\n  }]);\n\n  // Admin Features: Additions\n  const addStaff = newStaff => {\n    setStaffList([...staffList, newStaff]);\n  };\n  const deleteStaff = id => {\n    setStaffList(staffList.filter(staff => staff.id !== id));\n  };\n  const setBreakTime = (id, breakTime) => {\n    setStaffList(staffList.map(staff => staff.id === id ? {\n      ...staff,\n      breakTime\n    } : staff));\n  };\n  const setOutTime = (id, outTime) => {\n    setStaffList(staffList.map(staff => staff.id === id ? {\n      ...staff,\n      outTime\n    } : staff));\n  };\n\n  // (rest of your existing component code remains unchanged...)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n}\nexport default Demo;","map":{"version":3,"names":["React","useState","useEffect","Demo","refreshCount","setRefreshCount","showAdminModal","setShowAdminModal","adminCode","setAdminCode","isAdminMode","setIsAdminMode","guestCount","setGuestCount","liveWaitTime","setLiveWaitTime","hourlyWaitTimes","setHourlyWaitTimes","hour","waitTime","hourlyEfficiency","efficiency","theaterStatus","setTheaterStatus","staffList","setStaffList","id","name","position","theater","addStaff","newStaff","deleteStaff","filter","staff","setBreakTime","breakTime","map","setOutTime","outTime","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/clayf/OneDrive/Documents/GitHub/soarops/frontend/src/Demo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Demo() {\r\n  const [refreshCount, setRefreshCount] = useState(0);\r\n  const [showAdminModal, setShowAdminModal] = useState(false);\r\n  const [adminCode, setAdminCode] = useState('');\r\n  const [isAdminMode, setIsAdminMode] = useState(false);\r\n\r\n  // Guest count state\r\n  const [guestCount, setGuestCount] = useState(36542);\r\n\r\n  // Wait time states\r\n  const [liveWaitTime, setLiveWaitTime] = useState(45);\r\n  const [hourlyWaitTimes, setHourlyWaitTimes] = useState([\r\n    { hour: '8 AM', waitTime: 30 },\r\n    { hour: '9 AM', waitTime: 35 },\r\n    { hour: '10 AM', waitTime: 50 },\r\n    { hour: '11 AM', waitTime: 65 },\r\n    { hour: '12 PM', waitTime: 70 },\r\n    { hour: '1 PM', waitTime: 55 },\r\n    { hour: '2 PM', waitTime: 45 },\r\n    { hour: '3 PM', waitTime: 40 },\r\n    { hour: '4 PM', waitTime: 35 },\r\n    { hour: '5 PM', waitTime: 40 },\r\n    { hour: '6 PM', waitTime: 30 },\r\n    { hour: '7 PM', waitTime: 25 }\r\n  ]);\r\n\r\n  // Hourly efficiency data for the graph\r\n  const [hourlyEfficiency] = useState([\r\n    { hour: '8 AM', efficiency: 91 },\r\n    { hour: '9 AM', efficiency: 93 },\r\n    { hour: '10 AM', efficiency: 96 },\r\n    { hour: '11 AM', efficiency: 94 },\r\n    { hour: '12 PM', efficiency: 89 },\r\n    { hour: '1 PM', efficiency: 87 },\r\n    { hour: '2 PM', efficiency: 90 },\r\n    { hour: '3 PM', efficiency: 94 },\r\n    { hour: '4 PM', efficiency: 96 },\r\n    { hour: '5 PM', efficiency: 97 },\r\n    { hour: '6 PM', efficiency: 95 },\r\n    { hour: '7 PM', efficiency: 92 }\r\n  ]);\r\n\r\n  // Theater status management\r\n  const [theaterStatus, setTheaterStatus] = useState({\r\n    'A': 'Operational',\r\n    'B': 'Operational',\r\n    'C': 'Maintenance'\r\n  });\r\n\r\n  const [staffList, setStaffList] = useState([\r\n    { id: 1, name: 'John Smith', position: 'Lead', theater: 'A', efficiency: 95 },\r\n    { id: 2, name: 'Sarah Johnson', position: 'Operator', theater: 'A', efficiency: 92 },\r\n    { id: 3, name: 'Michael Brown', position: 'Greeter', theater: 'A', efficiency: 88 },\r\n    { id: 4, name: 'Emily Davis', position: 'Operator', theater: 'B', efficiency: 94 },\r\n    { id: 5, name: 'David Wilson', position: 'Lead', theater: 'B', efficiency: 90 },\r\n    { id: 6, name: 'Jessica Taylor', position: 'Greeter', theater: 'B', efficiency: 89 },\r\n    { id: 7, name: 'Robert Martinez', position: 'Lead', theater: 'C', efficiency: 91 },\r\n    { id: 8, name: 'Lisa Anderson', position: 'Operator', theater: 'C', efficiency: 87 },\r\n  ]);\r\n\r\n  // Admin Features: Additions\r\n  const addStaff = (newStaff) => {\r\n    setStaffList([...staffList, newStaff]);\r\n  };\r\n\r\n  const deleteStaff = (id) => {\r\n    setStaffList(staffList.filter(staff => staff.id !== id));\r\n  };\r\n\r\n  const setBreakTime = (id, breakTime) => {\r\n    setStaffList(staffList.map(staff =>\r\n      staff.id === id ? { ...staff, breakTime } : staff\r\n    ));\r\n  };\r\n\r\n  const setOutTime = (id, outTime) => {\r\n    setStaffList(staffList.map(staff =>\r\n      staff.id === id ? { ...staff, outTime } : staff\r\n    ));\r\n  };\r\n\r\n  // (rest of your existing component code remains unchanged...)\r\n\r\n  return (\r\n    <div>\r\n      {/* Your existing UI and admin dashboard logic */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}